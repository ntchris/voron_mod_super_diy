# for mellow ERCF canbus
# endstop gpio20 
# driver0 , selector , diag gpio22


[mcu ercf]
canbus_uuid:  efc740efc589
# this is mellow ERCF canbus

# FILAMENT DRIVE GEAR STEPPER  ---------------------------------------------------------------------------------------------
# Adapt accordingly to your setup and desires
# The default values are tested with the BOM NEMA14 motor
# Please adapt these values to the motor you are using
# Example : for NEMA17 motors, you'll usually set the stealthchop_threshold to 0
# and use higher current
[tmc2209 manual_extruder_stepper gear_stepper]
uart_pin: ercf:gpio9
# uart_address: 0  # mellow has no this line
interpolate: True
run_current: 0.4			# NEMA14 motor
hold_current: 0.1			# Can be small
sense_resistor: 0.110
stealthchop_threshold: 0		# 999999 to enable stealthChop

[manual_extruder_stepper gear_stepper]
# driver 1 in mellow schematics
step_pin: ercf:gpio7
dir_pin: ercf:gpio8   #  remove !
enable_pin: !ercf:gpio6
#rotation_distance: 22.7316868		# Bondtech 5mm Drive Gears. Must be manually verified and tuned.
rotation_distance: 22.7656	# -1mm

gear_ratio: 80:20
microsteps: 16 				# Recommend 8 or 16. Try both to avoid Klipper 'Timer too close' error (also try adjusting num_moves)
full_steps_per_rotation: 200		# 200 for 1.8 degree, 400 for 0.9 degree
velocity: 50
accel: 400
#

# use it if you want to use sensorless SELECTOR with the ERCF EASY BRD (yes, this is on the gear stepper!)
# This should be the pin of the physical selector endstop and is used to determine the difference between the true
# endstop and a blockage preventing selector movement. Don't forget to set 'sensorless_selector: 1' in ercf_parameters.cfg
# gpio20 endstop, or should I use an idle pin? gpio24
endstop_pin: ercf:gpio20	# Comment out if using physical endstop  gpio20 switch (default)


# SELECTOR STEPPER  --------------------------------------------------------------------------------------------------------
# driver 0 in mellow schematics
[tmc2209 manual_stepper selector_stepper]
uart_pin: ercf:gpio0
#uart_address:1   # mellow has no this line
run_current: 0.55	#  was 0.5
hold_current: 0.1		# Can be small if not using sensorless selector
interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 0	# 999999 to enable stealthChop
diag_pin: ercf:gpio22		# Set to MCU pin connected to TMC DIAG pin, pullup is not needed, but pullup works too
driver_SGTHRS: 80		# 255 is most sensitive value, 0 is least sensitive


[manual_stepper selector_stepper]
# driver 0 in mellow schematics
step_pin: ercf:gpio2
dir_pin: !ercf:gpio1
enable_pin: !ercf:gpio3
rotation_distance: 40
microsteps: 16 			# Don't need high fidelity
full_steps_per_rotation: 200	# 200 for 1.8 degree, 400 for 0.9 degree
velocity: 200
accel: 600

# Select the endstop you want depending if you are using sensorless homing for the selector or not
#endstop_pin: ercf:gpio20   # physical
endstop_pin: tmc2209_selector_stepper:virtual_endstop

# Select the endstop switch physical (for normal selector) or virtual (sensorless selector homing)
# !!! for normally close micro switch ( normally pulled to GND)

# SELECTOR SERVO -----------------------------------------------------------------------------------------------------------
[ercf_servo ercf_servo]
pin: ercf:gpio21
maximum_servo_angle: 180
minimum_pulse_width: 0.00085
maximum_pulse_width: 0.00215



#[duplicate_pin_override]
#pins: ercf:gpio15
# Put there the pin used by the encoder and the filament_motion_sensor
# It has to be the same pin for those 3



## ENCODER -----------------------------------------------------------------------------------------------------------------
## The encoder_resolution is determined by running the ERCF_CALIBRATE_ENCODER. Be sure to read the manual
[ercf_encoder ercf_encoder]
encoder_pin: ^ercf:gpio15			# EASY-BRD: ^ercf:PA6, Flytech ERB: ^ercf:gpio22
# encoder_resolution: 1.339226	# Set AFTER 'rotation_distance' is tuned for gear stepper (see manual)
#encoder_resolution: 1.4421   # !!!! tested , original fw
#encoder_resolution: 1.340483  # happy hare
# encoder_resolution:  1.443696
encoder_resolution: 1.339585


# These are advanced but settings for Automatic clog detection mode. Make sure you understand or ask questions on Discord
desired_headroom: 8.0		# The runout headroom that ERCF will attempt to maintain (closest ERCF comes to triggering runout)
average_samples: 4		# The "damping" effect of last measurement. Higher value means clog_length will be reduced more slowly
flowrate_samples: 10		# How many "movements" on the encoder to measure over for flowrate calc


## TOOLHEAD SENSOR ---------------------------------------------------------------------------------------------------------
# Uncomment this section to enable toolhead sensor support
#
## ERCF Toolhead sensor START
#[filament_switch_sensor toolhead_sensor]
#pause_on_runout: False		# Must be False
#switch_pin: {dummy_pin_must_set_me}
## ERCF Toolhead sensor END

